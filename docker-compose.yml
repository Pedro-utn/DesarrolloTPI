networks:
  net:
    driver: bridge

volumes:
  postgres-db:

services:
  database:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ordenycompra
      - POSTGRES_INITDB_ARGS=--auth-host=md5 --auth-local=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 2s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-db:/var/lib/postgresql/data
    networks:
      - net

  backend:
    build: 
      context: ./backendTPI
      dockerfile: ./.devcontainer/dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backendTPI:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_NAME=ordenycompra
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=1234
    depends_on:
      database:
        condition: service_healthy
    networks:
      - net
    restart: unless-stopped
