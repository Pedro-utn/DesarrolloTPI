# Usar la imagen oficial de Node.js
FROM node:18.19.1-alpine 

# Establecer el directorio de trabajo dentro del contenedor
WORKDIR /usr/src/app

# Copiar solo los archivos de dependencias para aprovechar el cache de Docker.
COPY package*.json ./

# Instalar las dependencias del proyecto
# Usar --omit=dev para produccion, pero para desarrollo, queremos las devDependencies (incluyendo @nestjs/cli, ts-node-dev, etc.)
RUN npm install

# Copiar el resto del código fuente del proyecto
# Esto es esencial para que npm run start:dev pueda ver tus archivos .ts
COPY . .

# Exponer el puerto que usa la aplicación
EXPOSE 3000

# Comando por defecto para iniciar la aplicación en modo desarrollo.
# 'start:dev' de NestJS compila y recarga automáticamente al detectar cambios.
CMD ["npm", "run", "start:dev"]

# Las líneas de depuración son útiles, pero para la ejecución normal, ya no las necesitamos aquí.
# Si quieres depurar la construcción de la imagen, puedes reinsertarlas temporalmente.
# RUN echo "Contenido generado:" && ls -lh dist/